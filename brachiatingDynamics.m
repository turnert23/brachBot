function sys = brachiatingDynamics(t,yi,m1,m2,lc1,lc2,l1,l2,i1,i2,g)
%BRACHIATINGDYNAMICS This function contains the EOM for a two-link
%brachiating robot
%   Detailed explanation goes here
theta1 = yi(1);     theta2 = yi(2);  %Positions
theta1_dot = yi(3); theta2_dot=yi(4); %Velocities

tau = controlHO(yi);


%EOM to be completed by student
theta1_ddot = (i1+(-1).*i2+2.*lc1.^2.*m1+lc1.^2.*m2+(-1).*lc2.^2.*m2).^(-1).*( ...
  i1.*i2+2.*i2.*lc1.^2.*m1+i2.*lc1.^2.*m2+2.*i1.*lc2.^2.*m2+i2.* ...
  lc2.^2.*m2+4.*lc1.^2.*lc2.^2.*m1.*m2+2.*lc1.^2.*lc2.^2.*m2.^2+ ...
  lc2.^4.*m2.^2+2.*lc1.*lc2.^3.*m2.^2.*cos(theta2)+(-1).*lc1.^2.* ...
  lc2.^2.*m2.^2.*cos (theta2).^2).^(-1).*(((-1).*i1+i2+(-2).*lc1.^2.*...
  m1+(-1).*lc1.^2.*m2+lc2.^2.*m2).*(i2+2.*lc2.^2.*m2).*((-2).*lc1.* ...
  lc2.*m2.*theta1_dot.*theta2_dot.*sin(theta2)+(-1).*lc1.*lc2.*m2.* ...
  theta2_dot.^2.*sin(theta2)+g.*((lc1.*m1+lc1.*m2+lc2.*m2.*cos( ...
  theta2)).*sin(theta1)+lc2.*m2.*cos (theta1).*sin(theta2)))+ ...
  0.225792E2.*(i2+lc2.^2.*m2+lc1.*lc2.*m2.*cos(theta2)).*(0.5E0.*( ...
  2.*theta1+theta2).*(i1.*i2+2.*i2.*lc1.^2.*m1+i2.*lc1.^2.*m2+2.* ...
  i1.*lc2.^2.*m2+i2.*lc2.^2.*m2+4.*lc1.^2.*lc2.^2.*m1.*m2+2.* ...
  lc1.^2.*lc2.^2.*m2.^2+lc2.^4.*m2.^2+2.*lc1.*lc2.^3.*m2.^2.*cos( ...
  theta2)+(-1).*lc1.^2.*lc2.^2.*m2.^2.*cos (theta2).^2)+0.885771E-1.*...
  (i2+3.*lc2.^2.*m2+(-1).*lc1.*lc2.*m2.*cos(theta2)).*(lc1.*lc2.* ...
  m2.*theta1_dot.*theta2_dot.*sin(theta2)+0.5E0.*lc1.*lc2.*m2.* ...
  theta2_dot.^2.*sin(theta2)+g.*(((-0.5E0).*lc1.*m1+(-0.5E0).*lc1.* ...
  m2+(-0.5E0).*lc2.*m2.*cos(theta2)).*sin(theta1)+(-0.5E0).*lc2.* ...
  m2.*cos (theta1).*sin(theta2)))));

theta2_ddot = (i1+(-1).*i2+2.*lc1.^2.*m1+lc1.^2.*m2+(-1).*lc2.^2.*m2).^(-1).*( ...
  i1.*i2+2.*i2.*lc1.^2.*m1+i2.*lc1.^2.*m2+2.*i1.*lc2.^2.*m2+i2.* ...
  lc2.^2.*m2+4.*lc1.^2.*lc2.^2.*m1.*m2+2.*lc1.^2.*lc2.^2.*m2.^2+ ...
  lc2.^4.*m2.^2+2.*lc1.*lc2.^3.*m2.^2.*cos(theta2)+(-1).*lc1.^2.* ...
  lc2.^2.*m2.^2.*cos (theta2).^2).^(-1).*((i1+(-1).*i2+2.*lc1.^2.*m1+...
  lc1.^2.*m2+(-1).*lc2.^2.*m2).*(i2+lc2.^2.*m2+lc1.*lc2.*m2.*cos( ...
  theta2)).*((-2).*lc1.*lc2.*m2.*theta1_dot.*theta2_dot.*sin(theta2)+( ...
  -1).*lc1.*lc2.*m2.*theta2_dot.^2.*sin(theta2)+g.*((lc1.*m1+lc1.*m2+ ...
  lc2.*m2.*cos(theta2)).*sin(theta1)+lc2.*m2.*cos (theta1).*sin( ...
  theta2)))+(-0.225792E2).*(i1+i2+2.*lc1.^2.*m1+lc1.^2.*m2+lc2.^2.* ...
  m2+2.*lc1.*lc2.*m2.*cos(theta2)).*(0.5E0.*(2.*theta1+theta2).*( ...
  i1.*i2+2.*i2.*lc1.^2.*m1+i2.*lc1.^2.*m2+2.*i1.*lc2.^2.*m2+i2.* ...
  lc2.^2.*m2+4.*lc1.^2.*lc2.^2.*m1.*m2+2.*lc1.^2.*lc2.^2.*m2.^2+ ...
  lc2.^4.*m2.^2+2.*lc1.*lc2.^3.*m2.^2.*cos(theta2)+(-1).*lc1.^2.* ...
  lc2.^2.*m2.^2.*cos (theta2).^2)+0.885771E-1.*(i2+3.*lc2.^2.*m2+(-1)...
  .*lc1.*lc2.*m2.*cos(theta2)).*(lc1.*lc2.*m2.*theta1_dot.* ...
  theta2_dot.*sin(theta2)+0.5E0.*lc1.*lc2.*m2.*theta2_dot.^2.*sin( ...
  theta2)+g.*(((-0.5E0).*lc1.*m1+(-0.5E0).*lc1.*m2+(-0.5E0).*lc2.* ...
  m2.*cos(theta2)).*sin(theta1)+(-0.5E0).*lc2.*m2.*cos (theta1).*sin(...
  theta2)))));


%Updates
sys(1) = theta1_dot;
sys(2) = theta2_dot;
sys(3) = theta1_ddot;
sys(4) = theta2_ddot;

sys = sys';
end

